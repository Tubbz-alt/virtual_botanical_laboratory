{"version":3,"file":"web-lab.js","sources":["../src/lsystem/LexicalError.js","../src/lsystem/ParseError.js","../src/lsystem/ModuleTree.js","../src/lsystem/Successor.js","../src/lsystem/Production.js","../src/lsystem/Predecessor.js","../src/lsystem/IdentityProduction.js","../src/lsystem/Token.js","../src/lsystem/Lexer.js","../src/lsystem/Module.js","../src/lsystem/ModuleDefinition.js","../src/lsystem/Alphabet.js","../src/lsystem/StochasticProduction.js","../src/lsystem/Expression.js","../src/lsystem/BooleanExpression.js","../src/lsystem/NumericalExpression.js","../src/lsystem/Parser.js","../src/lsystem/LSystem.js","../src/interpretation/Command.js","../src/interpretation/Interpretation.js","../src/interpretation/TurtleInterpretation.js","../src/interpretation/CanvasTurtleInterpretation.js","../src/Lab.js","../src/lab.js"],"sourcesContent":["/*\n * Copyright 2017 Huub de Beer <huub@heerdebeer.org>\n *\n * This file is part of virtual_botanical_laboratory.\n *\n * virtual_botanical_laboratory is free software: you can redistribute it\n * and/or modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * virtual_botanical_laboratory is distributed in the hope that it will be\n * useful, but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General\n * Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with virtual_botanical_laboratory.  If not, see\n * <http://www.gnu.org/licenses/>.\n * \n */\n/**\n * An error during the lexical analysis phase while parsing an LSystem input\n * string.\n */\nclass LexicalError extends Error {\n};\n\nexport {\n    LexicalError\n}\n","/*\n * Copyright 2017 Huub de Beer <huub@heerdebeer.org>\n *\n * This file is part of virtual_botanical_laboratory.\n *\n * virtual_botanical_laboratory is free software: you can redistribute it\n * and/or modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * virtual_botanical_laboratory is distributed in the hope that it will be\n * useful, but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General\n * Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with virtual_botanical_laboratory.  If not, see\n * <http://www.gnu.org/licenses/>.\n * \n */\n/**\n * A Error encountered while parsing a LSystem input string.\n */\nclass ParseError extends Error {\n};\n\nexport {\n    ParseError\n}\n","/*\n * Copyright 2017 Huub de Beer <huub@heerdebeer.org>\n *\n * This file is part of virtual_botanical_laboratory.\n *\n * virtual_botanical_laboratory is free software: you can redistribute it\n * and/or modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * virtual_botanical_laboratory is distributed in the hope that it will be\n * useful, but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General\n * Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with virtual_botanical_laboratory.  If not, see\n * <http://www.gnu.org/licenses/>.\n * \n */\n\nconst stringifyModuleTree = function (tree) {\n    const converted = [];\n    for (const node of tree) {\n        if (node instanceof ModuleTree) {\n            converted.push(\"[\");\n            converted.push(stringifyModuleTree(node));\n            converted.push(\"]\");\n        } else {\n            converted.push(node.stringify());\n        }\n    }\n    return converted.join(\" \");\n};\n\nconst flatten = function (moduleTree) {\n    let modules = [];\n    for (const item of moduleTree) {\n        if (item instanceof ModuleTree) {\n            modules = modules.concat(flatten(item));\n        } else {\n            modules.push(item);\n        }\n    }\n    return modules;\n};\n\n/**\n * A ModuleTree.\n */\nclass ModuleTree extends Array {\n    /**\n     * Create a new ModuleTree instance with an initial list of nodes, if any.\n     *\n     * @param {Module|ModuleTree} [nodes = []] - an initial list of nodes for\n     * this new ModuleTree\n     */\n    constructor(nodes = []) {\n        super();\n        for (const node of nodes) {\n            this.push(node);\n        }\n    }\n\n    /**\n     * Iterator yielding each module in this ModuleTree, via a breadth first\n     * strategy for sub ModuleTrees.\n     *\n     * @yield {Module}\n     */\n    * eachModule() {\n        for (const module of flatten(this)) {\n            yield module;\n        }\n    }\n\n    /**\n     * Create a String representation of this ModuleTree.\n     *\n     * @return {String}\n     */\n    stringify() {\n        return stringifyModuleTree(this);\n    }\n}\n\nexport {\n    ModuleTree\n}\n","/*\n * Copyright 2017 Huub de Beer <huub@heerdebeer.org>\n *\n * This file is part of virtual_botanical_laboratory.\n *\n * virtual_botanical_laboratory is free software: you can redistribute it\n * and/or modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * virtual_botanical_laboratory is distributed in the hope that it will be\n * useful, but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General\n * Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with virtual_botanical_laboratory.  If not, see\n * <http://www.gnu.org/licenses/>.\n * \n */\nimport {ModuleTree} from \"./ModuleTree.js\";\n\n/**\n * A successor in a production.\n *\n * @property {Module[]} a list of modules\n */\nclass Successor extends ModuleTree {\n    /**\n     * Apply parameters to this successor.\n     *\n     * @param {NumericalExpression[]} [parameters = []] - the parameters to\n     * apply to this Successor.\n     *\n     * @returns {Successor} This Successor with parameters applied, if any.\n     */\n    apply(parameters = []) {\n        return this;\n    }\n}\n\nexport {\n    Successor\n}\n","/*\n * Copyright 2017 Huub de Beer <huub@heerdebeer.org>\n *\n * This file is part of virtual_botanical_laboratory.\n *\n * virtual_botanical_laboratory is free software: you can redistribute it\n * and/or modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * virtual_botanical_laboratory is distributed in the hope that it will be\n * useful, but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General\n * Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with virtual_botanical_laboratory.  If not, see\n * <http://www.gnu.org/licenses/>.\n * \n */\nconst _predecessor = new WeakMap();\nconst _successor = new WeakMap();\nconst _condition = new WeakMap();\n\n/**\n * A Production is a rewriting rule from a predecessor to a successor.\n *\n * @property {Predecessor} predecessor\n * @property {BooleanExpression} [condition = undefined] - productions in a\n * parameterized LSystem can have a condition guarding a production.\n * @property {Successor} successor\n */\nclass Production {\n    /**\n     * Create a new Production instance based on the predecessor, an optional\n     * condition and a successor.\n     *\n     * @param {Predecessor} predecessor\n     * @param {Successor} successor\n     * @param {BooleanExpression} [condition = undefined]\n     */\n    constructor(predecessor, successor, condition = undefined) {\n        _predecessor.set(this, predecessor);\n        _successor.set(this, successor);\n        _condition.set(this, condition);\n    }\n\n    get predecessor() {\n        return _predecessor.get(this);\n    }\n\n    get successor() {\n        return _successor.get(this);\n    }\n\n    get condition() {\n        return _condition.get(this);\n    }\n\n    /**\n     * Is this production conditional?\n     *\n     * @return {Boolean} True if this production has a condition.\n     */\n    isConditional() {\n        return undefined !== this.condition;\n    }\n\n    /**\n     * Follow this productions\n     *\n     * @param {NumericalExpression[]} [parameters = []] - an optional list of\n     * parameters to check the condition and to apply to the successor of this\n     * production.\n     *\n     * @returns {Successor} The successor of this Production with parameters\n     * applied.\n     */\n    follow(parameters = []) {\n        return this.successor.apply(parameters);\n    }\n\n    /**\n     * Create a String representation of this Production.\n     *\n     * @return {String}\n     */\n    stringify() {\n        let str = this.predecessor.stringify();\n        if (this.isConditional()) {\n            str += `: ${this.condition.stringify()}`;\n        }\n        str += ` -> ${this.successor.stringify()}`;\n        return str;\n    }\n}\n\nexport {\n    Production\n}\n","/*\n * Copyright 2017 Huub de Beer <huub@heerdebeer.org>\n *\n * This file is part of virtual_botanical_laboratory.\n *\n * virtual_botanical_laboratory is free software: you can redistribute it\n * and/or modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * virtual_botanical_laboratory is distributed in the hope that it will be\n * useful, but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General\n * Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with virtual_botanical_laboratory.  If not, see\n * <http://www.gnu.org/licenses/>.\n * \n */\nconst _module = new WeakMap();\nconst _leftContext = new WeakMap();\nconst _rightContext = new WeakMap();\n\n/**\n * A Predecessor in a Production.\n *\n * @param {Module} module\n * @param {ModuleTree} [leftContext = undefined] - an optional left context\n * for context sensitive productions.\n * @param {ModuleTree} [rightContext = undefined] - an optional right context\n * for context sensitive productions.\n */\nclass Predecessor {\n    /**\n     * Create a new instance of Predecessor\n     *\n     * @param {Module} module - the module this predecessor is about.\n     */\n    constructor(module) {\n        _module.set(this, module);\n        _leftContext.set(this, undefined);\n        _rightContext.set(this, undefined);\n    }\n\n    get module() {\n        return _module.get(this);\n    }\n\n    set leftContext(context) {\n        _leftContext.set(this, context);\n    }\n\n    get leftContext() {\n        return _leftContext.get(this);\n    }\n\n    /**\n     * Has this predecessor a left context?\n     *\n     * @returns {Boolean}\n     */\n    hasLeftContext() {\n        return undefined !== this.leftContext;\n    }\n\n    set rightContext(context) {\n        _rightContext.set(this, context);\n    }\n\n    get rightContext() {\n        return _rightContext.get(this);\n    }\n\n    /**\n     * Has this predecessor a right context?\n     *\n     * @returns {Boolean}\n     */\n    hasRightContext() {\n        return undefined !== this.rightContext;\n    }\n\n    /**\n     * Is this a context sensitive predecessor?\n     *\n     * @returns {Boolean} True if this predecessor has a left context, a right\n     * context, or both contexts.\n     */\n    isContextSensitive() {\n        return this.hasLeftContext() || this.hasRightContext();\n    }\n\n    /**\n     * Is this a context free predecessor?\n     *\n     * @returns {Boolean} True if this precessor does not care about the\n     * context.\n     */\n    isContextFree() {\n        return !this.isContextSensitive();\n    }\n\n    /**\n     * Does this predecessor match a given module?\n     *\n     * @param {Module} module - the module to match against this predecessor.\n     * @param {ModuleTree} [leftContext = undefined] - an optional left\n     * context to match.\n     * @param {ModuleTree} [rightContext = undefined] - an optional right\n     * context to match.\n     * @returns {Boolean} True if the module matches agains this predecessor,\n     * i.e, they are equal and the context matches.\n     */\n    matches(module, leftContext = undefined, rightContext = undefined) {\n        return this.module.equals(module);\n    }\n\n    /**\n     * Create a String representation of this Predecessor.\n     *\n     * @returns {String}\n     */\n    stringify() {\n        let str = \"\";\n        if (this.hasLeftContext()) {\n            str += `${this.leftContext.stringify()} < `;\n        }\n        str += this.module.stringify();\n        if (this.hasRightContext()) {\n            str += ` > ${this.rightContext.stringify()}`;\n        }\n        return str;\n    }\n\n}\n\nexport {\n    Predecessor\n}\n","/*\n * Copyright 2017 Huub de Beer <huub@heerdebeer.org>\n *\n * This file is part of virtual_botanical_laboratory.\n *\n * virtual_botanical_laboratory is free software: you can redistribute it\n * and/or modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * virtual_botanical_laboratory is distributed in the hope that it will be\n * useful, but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General\n * Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with virtual_botanical_laboratory.  If not, see\n * <http://www.gnu.org/licenses/>.\n * \n */\nimport {Production} from \"./Production.js\";\nimport {Successor} from \"./Successor.js\";\nimport {Predecessor} from \"./Predecessor.js\";\n\n/**\n * An IdentityProduction is a Production that maps a Module to itself. This is\n * used in an LSystem for all Modules in an Alphabet that do not have a\n * Production of their own. This allows to use more succinct LSystem\n * definitions.\n */\nclass IdentityProduction extends Production {\n    /**\n     * Create a new IdentityProduction instance.\n     *\n     * @param {Module} module - the module for which to create the\n     * IdentityProduction.\n     */\n    constructor(module) {\n        super(new Predecessor(module), new Successor([module]));\n    }\n}\n\nexport {\n    IdentityProduction\n}\n","/*\n * Copyright 2017 Huub de Beer <huub@heerdebeer.org>\n *\n * This file is part of virtual_botanical_laboratory.\n *\n * virtual_botanical_laboratory is free software: you can redistribute it\n * and/or modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * virtual_botanical_laboratory is distributed in the hope that it will be\n * useful, but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General\n * Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with virtual_botanical_laboratory.  If not, see\n * <http://www.gnu.org/licenses/>.\n * \n */\n// Token's private members\nconst _name = new WeakMap();\nconst _lexeme = new WeakMap();\nconst _value = new WeakMap();\nconst _column = new WeakMap();\nconst _line = new WeakMap();\nconst _lexemeBegin = new WeakMap();\n\n/**\n * A token recognized during the lexical analysis of a LSystem input string\n * and used to parse that input string.\n *\n * @property {Symbol} name - this Token's type name, such as IDENTIFIER or\n * OPERATOR\n * @property {String} lexeme - this Token's lexeme\n * @property {String|Number|undefined} value - this Token's value as\n * recognized from the lexeme\n * @property {Number} line - the line number this Token was found at in the\n * input string\n * @property {Number} column - the column on the line this Token was found at\n * @property {Number} lexemeBegin - the index of the first character of this\n * Token's lexeme in the input string\n */\nclass Token {\n    /**\n     * Create a new Token.\n     *\n     * @param {Symbol} name - the name of the token type, such as IDENTIFIER or\n     *   OPERATOR\n     * @param {String} lexeme - the string that is recognized as this token\n     * @param {String|Number|undefined} value - the value represented by the\n     *   lexeme\n     * @param {Number} line - the line in the input string this token was\n     *   recognized\n     * @param {Number} column - the column in the line in the input string this\n     *   token was recognized\n     * @param {Number} lexemeBegin - the index of the first character of the\n     *   lexeme in the input string\n     */\n    constructor(name, lexeme, value, line, column, lexemeBegin) {\n        _name.set(this, name);\n        _lexeme.set(this, lexeme);\n        _value.set(this, value);\n        _line.set(this, line);\n        _column.set(this, column);\n        _lexemeBegin.set(this, lexemeBegin);\n    }\n\n    get name() {\n        return _name.get(this);\n    }\n    \n    get lexeme() {\n        return _lexeme.get(this);\n    }\n\n    get value() {\n        return _value.get(this);\n    }\n\n    get line() {\n        return _line.get(this);\n    }\n\n    get column() {\n        return _column.get(this);\n    }\n\n    get lexemeBegin() {\n        return _lexemeBegin.get(this);\n    }\n\n    /**\n     * Get the position of this Token in the input source in the format (line,\n     * column).\n     *\n     * @returns {String}\n     */\n    position() {\n        return `(${this.line}, ${this.column})`;\n    }\n};\n\n\nexport {\n    Token\n};\n","/*\n * Copyright 2017 Huub de Beer <huub@heerdebeer.org>\n *\n * This file is part of virtual_botanical_laboratory.\n *\n * virtual_botanical_laboratory is free software: you can redistribute it\n * and/or modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * virtual_botanical_laboratory is distributed in the hope that it will be\n * useful, but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General\n * Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with virtual_botanical_laboratory.  If not, see\n * <http://www.gnu.org/licenses/>.\n * \n */\nimport {LexicalError} from './LexicalError.js';\nimport {Token} from './Token.js';\nimport {CONTEXT, MODULE_NAME} from './Parser.js';\n\n// Token names\n\nconst NUMBER = Symbol('NUMBER');\nconst IDENTIFIER = Symbol('IDENTIFIER');\nconst BRACKET_OPEN = Symbol('BRACKET_OPEN');\nconst BRACKET_CLOSE = Symbol('BRACKET_CLOSE');\nconst OPERATOR = Symbol('OPERATOR');\nconst DELIMITER = Symbol('DELIMITER');\nconst KEYWORD = Symbol('KEYWORD');\n\n// Private data and functions for lexer\n\nconst _input = new WeakMap();\nconst _lexemeBegin = new WeakMap();\nconst _forward = new WeakMap();\nconst _line = new WeakMap();\nconst _column = new WeakMap();\n\nconst _context = new WeakMap();\n\n// Manipulate state of DFA\n\nconst reset = function (lexer, input) {\n    _input.set(lexer, input);\n    _lexemeBegin.set(lexer, 0);\n    _forward.set(lexer, -1);\n    _line.set(lexer, 0);\n    _column.set(lexer, 0);\n    _context.set(lexer, undefined);\n};\n\nconst saveState = function (lexer) {\n    return {\n        lexemeBegin: _lexemeBegin.get(lexer),\n        forward: _forward.get(lexer),\n        line: _line.get(lexer),\n        column: _column.get(lexer)\n    };\n};\n\nconst restoreState = function (lexer, state) {\n    _lexemeBegin.set(lexer, state.lexemeBegin);\n    _forward.set(lexer, state.forward);\n    _line.set(lexer, state.line);\n    _column.set(lexer, state.column);\n};\n\nconst setContext = function (lexer, newContext = undefined) {\n    _context.set(lexer, newContext);\n};\n\nconst isContext = function (lexer, context) {\n    return _context.get(lexer) === context;\n};\n\nconst line = function (lexer) {\n    return _line.get(lexer);\n};\n\nconst column = function (lexer) {\n    return _column.get(lexer);\n};\n\nconst peek = function (lexer, distance = 1) {\n    const forward = _forward.get(lexer);\n    if (forward + distance < _input.get(lexer).length) {\n        return _input.get(lexer)[forward + distance];\n    }\n};\n\nconst moveForward = function (lexer, skip = false) {\n    const c = peek(lexer);\n    if (c) {\n        _forward.set(lexer, _forward.get(lexer) + 1);\n        if ('\\n' === c) {\n            _line.set(lexer, line(lexer) + 1);\n            _column.set(lexer, 0);\n        } else {\n            _column.set(lexer, column(lexer) + 1);\n        }\n\n        if (skip) {\n            _lexemeBegin.set(lexer, _lexemeBegin.get(lexer) + 1);\n        }\n    }\n};\n\nconst lexeme = function (lexer) {\n    const start = _lexemeBegin.get(lexer);\n    const end = _forward.get(lexer);\n    return _input.get(lexer).slice(start, end + 1);\n};\n\nconst recognize  = function (lexer, tokenName, value) {\n    const token = new Token(\n        tokenName, \n        lexeme(lexer), \n        value, \n        line(lexer), \n        column(lexer) - lexeme(lexer).length,\n        _lexemeBegin.get(this)\n    );\n\n    _lexemeBegin.set(lexer, _forward.get(lexer) + 1);\n    _forward.set(lexer, _forward.get(lexer));\n\n    return token;\n}\n\nconst position = function (lexer) {\n    return `(${line(lexer)}, ${column(lexer) - (_forward.get(lexer) - _lexemeBegin.get(lexer))})`;\n};\n\n// Recognize patterns\n\nconst isWhitespace = function (c) {\n    return [' ', '\\t', '\\n'].includes(c);\n};\n\nconst isCommentStart = function (c) {\n    return '#' === c;\n};\n\nconst isDigit = function (c) {\n    return '0' <= c && c <= '9';\n};\n\nconst isLetter = function (c) {\n    return ('a' <= c && c <= 'z') || ('A' <= c && c <= 'Z');\n};\n\nconst isKeyword = function (identifier) {\n    return [\n        'lsystem',\n        'alphabet',\n        'axiom',\n        'productions',\n        'ignore',\n        'include',\n        'and',\n        'or',\n        'not',\n        'true',\n        'false'\n    ].includes(identifier);\n};\n\nconst isIdentifierSymbol = function (c) {\n    return [\n        \"+\",\n        \"-\",\n        \"/\",\n        \"*\",\n        \"&\",\n        \"|\",\n        \"$\"\n    ].includes(c);\n};\n\n// Recognize Tokens\n\nconst skipWhitespace = function (lexer) {\n    while (isWhitespace(peek(lexer))) {\n        moveForward(lexer, true);\n    }\n};\n\nconst skipComment = function (lexer) {\n    if (isCommentStart(peek(lexer))) {\n        while ('\\n' !== peek(lexer)) {\n            moveForward(lexer, true);\n        }\n    }\n};\n\nconst digits = function (lexer) {\n    while(isDigit(peek(lexer))) {\n        moveForward(lexer);\n    }\n};\n\nconst integer = function (lexer) {\n    if (isDigit(peek(lexer))) {\n        moveForward(lexer);\n        digits(lexer);\n    }\n};\n\nconst number = function (lexer) {\n    if (isDigit(peek(lexer))) {\n        integer(lexer);\n\n        // Decimal part\n        if ('.' === peek(lexer) && isDigit(peek(lexer, 2))) {\n            moveForward(lexer);\n            digits(lexer);\n        }\n\n        // Exponent part\n        if (['e', 'E'].includes(peek(lexer))) {\n            moveForward(lexer);\n\n            if (['+', '-'].includes(peek(lexer))) {\n                moveForward(lexer);\n            }\n\n            if (!isDigit(peek(lexer))) {\n                throw new LexicalError(`Expected a numerical exponential part at ${position(lexer)}, got '${peek(lexer)}' instead.`);\n            }\n\n            digits(lexer);\n        }\n\n        try {\n            const value = parseFloat(lexeme(lexer));\n            return recognize(lexer, NUMBER, value);        \n        } catch (e) {\n            throw new LexicalError(`Unable to parse '${lexeme(lexer)}' as a number at ${position(lexer)}.`);\n        }\n    }\n};\n\nconst identifier = function (lexer) {\n    // Modules can have symbols such as '+' or '-' as name as well.\n    if (isContext(lexer, MODULE_NAME) && isIdentifierSymbol(peek(lexer))) {\n        moveForward(lexer);\n        return recognize(lexer, IDENTIFIER, lexeme(lexer));\n    }\n\n    if (isLetter(peek(lexer))) {\n        moveForward(lexer);\n        while (isLetter(peek(lexer)) || isDigit(peek(lexer))) {\n            moveForward(lexer);\n        }\n\n        const id = lexeme(lexer);\n\n        return isKeyword(id) ? \n            recognize(lexer, KEYWORD, id) : \n            recognize(lexer, IDENTIFIER, id);\n    }\n};\n\n\nconst bracket = function (lexer) {\n    const BRACKET_OPEN_CHARACTERS = ['(', '{', '['];\n    const BRACKET_CLOSE_CHARACTERS = [')', '}', ']'];\n\n    if (isContext(lexer, CONTEXT)) {\n        BRACKET_OPEN_CHARACTERS.push(\"<\");\n        BRACKET_CLOSE_CHARACTERS.push(\">\");\n    };\n\n    const c = peek(lexer);\n    if (BRACKET_OPEN_CHARACTERS.includes(c)) {\n        moveForward(lexer);\n        return recognize(lexer, BRACKET_OPEN, c);\n    } else if (BRACKET_CLOSE_CHARACTERS.includes(c)) {\n        moveForward(lexer);\n        return recognize(lexer, BRACKET_CLOSE, c);\n    }\n};\n\nconst delimiter = function (lexer) {\n    const c = peek(lexer);\n    if ([',', ':'].includes(c)) {\n        moveForward(lexer);\n        return recognize(lexer, DELIMITER, c);\n    }\n};\n\nconst operator = function (lexer) {\n    const c = peek(lexer);\n    if (['-', '+', '*', '/', '^', '>', '<', '='].includes(c)) {\n        if ('-' === c) {\n            moveForward(lexer);\n            if ('>' === peek(lexer)) {\n                moveForward(lexer);\n            }\n        } else if ('<' === c) {\n            moveForward(lexer);\n            if ('=' === peek(lexer) || '>' === peek(lexer)) {\n                moveForward(lexer);\n            }\n        } else if ('>' === c) {\n            moveForward(lexer);\n            if ('=' === peek(lexer)) {\n                moveForward(lexer);\n            }\n        } else {\n            moveForward(lexer);\n        }\n\n        return recognize(lexer, OPERATOR, lexeme(lexer));\n    }\n};\n\n\n/**\n * A Lexer to analyse LSystem input strings lexically.\n */\nclass Lexer {\n\n    /**\n     * Create a new Lexer for an LSystem input string\n     *\n     * @param {String} [input = ''] - the input string the analyse.\n     */\n    constructor(input = '') {\n        reset(this, input);\n    }\n\n    /**\n     * Get the next token in the input. The token to regognize can depend on\n     * the context.\n     *\n     * @param {Symbol} [context = undefined] - an optional context to control\n     * the recognition process. For example, symbols like '+' and '-' are\n     * operators in the context of an expression, but are identifiers in the\n     * context of an alphabet.\n     *\n     * @returns {Token|undefined} the recognized token or undefined if no\n     * token could be recognized.\n     */\n    getNextToken(context = undefined) {\n        setContext(this, context);\n        while (peek(this)) {\n            do {\n                skipWhitespace(this);\n                skipComment(this);\n            } while (\n                isWhitespace(peek(this)) || isCommentStart(peek(this))\n            )\n\n            const token =\n                identifier(this) ||\n                number(this) ||\n                bracket(this) ||\n                delimiter(this) ||\n                operator(this)\n            ;\n\n            if (token) {\n                return token;\n            }\n        }\n    }\n\n    /**\n     * Look a distance ahead in the input string, optionally take into account\n     * the context.\n     *\n     * @param {Number} [distance = 1] - the distance to look ahead, defaults to\n     * 1.\n     * @param {Symbol} [context = undefined] - an optional context to control\n     * the recognition process.\n     *\n     * @returns {Token|undefined} the token recognized at distance or\n     * undefined if no token could be recognized at that distance.\n     */\n    lookAhead(distance = 1, context = undefined) {\n        const state = saveState(this);\n        let token = undefined;\n        for (let i = 0; i < distance; i++) {\n            token = this.getNextToken(context);\n        }\n        restoreState(this, state);\n        return token;\n    }\n\n};\n\nexport {\n    Lexer,\n    NUMBER,\n    IDENTIFIER,\n    BRACKET_OPEN,\n    BRACKET_CLOSE,\n    OPERATOR,\n    DELIMITER,\n    KEYWORD\n};\n","/*\n * Copyright 2017 Huub de Beer <huub@heerdebeer.org>\n *\n * This file is part of virtual_botanical_laboratory.\n *\n * virtual_botanical_laboratory is free software: you can redistribute it\n * and/or modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * virtual_botanical_laboratory is distributed in the hope that it will be\n * useful, but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General\n * Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with virtual_botanical_laboratory.  If not, see\n * <http://www.gnu.org/licenses/>.\n * \n */\n// A Module's private properties\nconst _name = new WeakMap();\nconst _parameters = new WeakMap();\n\n/**\n * A Module represents a symbol in a LSystem.\n *\n * @property {String} name - the name of the module.\n * @property {Object[]} parameters - the parameters of this module.\n */\nclass Module {\n\n    /**\n     * Create a new Module\n     *\n     * @param {String} name - the module's name\n     * @param {Object[]} [parameters = []] - the module's parameters, if any\n     */\n    constructor(name, parameters = []) {\n        _name.set(this, name);\n        _parameters.set(this, parameters);\n    }\n\n    get name() {\n        return _name.get(this);\n    }\n\n    get parameters() {\n        return _parameters.get(this);\n    }\n\n    /**\n     * Is this Module equal to another module?\n     *\n     * @param {Module} other - the other module to compare this module with\n     * @return {Boolean} True if the names are the same as well as their\n     * number of parameters.\n     */\n    equals(other) {\n        // console.log(`${this.name} === ${other.name} and ${this.parameters.length} === ${other.parameters.length}`);\n        return this.name === other.name && this.parameters.length === other.parameters.length;\n    }\n\n    /**\n     * Is this Module parameterized?\n     *\n     * @returns {Boolean} true if it has parameters.\n     */\n    isParameterized() {\n        return 0 < this.parameters.length;\n    }\n\n    /**\n     * Create a String representation of this Module.\n     *\n     * @returns {String}\n     */\n    stringify() {\n        if (this.isParameterized()) {\n            return `${this.name}(${this.parameters.map((p) => p.stringify()).join(',')})`;\n        } else {\n            return this.name;\n        }\n    }\n}\n\nexport {\n    Module\n}\n","/*\n * Copyright 2017 Huub de Beer <huub@heerdebeer.org>\n *\n * This file is part of virtual_botanical_laboratory.\n *\n * virtual_botanical_laboratory is free software: you can redistribute it\n * and/or modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * virtual_botanical_laboratory is distributed in the hope that it will be\n * useful, but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General\n * Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with virtual_botanical_laboratory.  If not, see\n * <http://www.gnu.org/licenses/>.\n * \n */\nimport {Module} from './Module.js';\n\n/**\n * A ModuleDefinition defines a module in an alphabet.\n */\nclass ModuleDefinition extends Module {\n\n    /**\n     * Does an actual module matches this Module's definition?\n     *\n     * @param {Module} actualModule - the actual module to check against this\n     * Module definition\n     * @returns {Boolean} True if the number of parameters is the same in\n     * actual and definition.\n     */\n    matchesDefinition(actualModule) {\n        return this.parameters.length === actualModule.parameters.length;\n    }\n\n    /**\n     * Create a String representation of this Module.\n     *\n     * @returns {String}\n     */\n    stringify() {\n        if (this.isParameterized()) {\n            return `${this.name}(${this.parameters.join(',')})`;\n        } else {\n            return this.name;\n        }\n    }\n}\n\nexport {\n    ModuleDefinition\n}\n","/*\n * Copyright 2017 Huub de Beer <huub@heerdebeer.org>\n *\n * This file is part of virtual_botanical_laboratory.\n *\n * virtual_botanical_laboratory is free software: you can redistribute it\n * and/or modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * virtual_botanical_laboratory is distributed in the hope that it will be\n * useful, but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General\n * Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with virtual_botanical_laboratory.  If not, see\n * <http://www.gnu.org/licenses/>.\n * \n */\nconst _moduleDefinitions = new WeakMap();\n\n/**\n * The Alphabet of an LSystem. The modules in an Alphabet are unique.\n */\nclass Alphabet {\n\n    /**\n     * Create a new instance of Alphabet.\n     *\n     * @param {Module[]} modules - a list of modules. \n     */\n    constructor(modules) {\n        _moduleDefinitions.set(this, []);\n        for (const module of modules) {\n            this.add(module);\n        }\n    }\n\n    /**\n     * Add a module to this Alphabet. If it already contains this module, an\n     * error is thrown.\n     *\n     * @param {Module} module - the module to add\n     * @throws {Error}\n     */\n    add(module) {\n        if (this.has(module)) {\n            throw new Error(`This alphabet already has a module '${module.stringify()}'.`);\n        }\n        _moduleDefinitions.get(this).push(module);\n    }\n\n    /**\n     * Does this Alphabet have this module?\n     *\n     * @param {Module} module\n     * @returns {Boolean} True if this Alphabet contains this module.\n     */\n    has(module) {\n       return undefined !== this.get(module);\n    }\n\n    /**\n     * Get a module from this Alphabet.\n     *\n     * @param {Module} module\n     * @returns {Module|undefined} the module\n     */\n    get(module) {\n       const found = _moduleDefinitions\n            .get(this)\n            .filter(\n                (m) => \n                    m.name === module.name && \n                    m.parameters.every((p) => p in module.parameters)\n            );\n        return 1 === found.length ? found[0] : undefined;\n    }\n\n    /**\n     * Create a String representation of this Alphabet.\n     *\n     * @returns {String}\n     */\n    stringify() {\n        return _moduleDefinitions.get(this).map((m) => m.stringify()).join(\", \");\n    }\n\n}\n\nexport {\n    Alphabet\n}\n","/*\n * Copyright 2017 Huub de Beer <huub@heerdebeer.org>\n *\n * This file is part of virtual_botanical_laboratory.\n *\n * virtual_botanical_laboratory is free software: you can redistribute it\n * and/or modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * virtual_botanical_laboratory is distributed in the hope that it will be\n * useful, but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General\n * Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with virtual_botanical_laboratory.  If not, see\n * <http://www.gnu.org/licenses/>.\n * \n */\nimport {Production} from \"./Production.js\";\n\n\nconst _successorList = new WeakMap();\n\n\nconst setupProbabilityMapping = function (production, successorList) {\n    let lower = 0;\n    for (const successor of successorList) {\n        if (0 >= successor.probability || successor.probability > 1) {\n            throw new Error('Probability should be between 0 and 1');\n        }\n\n        successor.lower = lower;\n        successor.upper = successor.lower + successor.probability;\n        lower = successor.upper;\n    }\n\n    if (1 !== successorList.reduce((sum, pair) => sum += pair.probability, 0)) {\n        throw new Error('Total probability should be 1');\n    }\n\n    _successorList.set(production, successorList);\n};\n\n/**\n * A StochasticProduction is a production with multiple possible rewriting\n * rules, each with a probability indicating the chance it will be chosen to\n * be used. The sum of the probabilities should be 1.\n *\n * @property {Successor} a successor is randomly chosen given the probability\n * of the rewriting rules of this StochasticProduction.\n */\nclass StochasticProduction extends Production {\n    /**\n     * Create a new instance of StochasticProduction.\n     *\n     * @param {Predecessor} predecessor\n     * @param {Object[]} successor - pairs of successors and their\n     * probabilities\n     * @param {Number} successor.probability - the probability of the successor\n     * @param {Successor} successor.successor - the successor\n     * @param {BooleanExpression} [condition = undefined] - an optional\n     * condition for this StochasticProduction.\n     */\n    constructor(predecessor, successors, condition = undefined) {\n        super(predecessor, undefined, condition);\n        setupProbabilityMapping(this, successors);\n    }\n\n    get successor() {\n        const random = Math.random();\n        const succ =  _successorList\n            .get(this)\n            .filter(\n                (successor) => successor.lower <= random && random < successor.upper\n            )[0].successor;\n        return succ;\n    }\n   \n    /**\n     * Create a String representation of this StochasticProduction.\n     *\n     * @returns {String}\n     */ \n    stringify() {\n        let str = this.predecessor.stringify();\n        if (this.isConditional()) {\n            str += `: ${this.condition.stringify()}`;\n        }\n        str += \"{\\n\";\n        str += _successorList\n            .get(this)\n            .map((successor) => `\\t${successor.probability} -> ${successor.successor.stringify()}`)\n            .join(\",\\n\");\n        str += \"\\n}\";\n        return str;\n    }\n}\n\nexport {\n    StochasticProduction\n}\n","/*\n * Copyright 2017 Huub de Beer <huub@heerdebeer.org>\n *\n * This file is part of virtual_botanical_laboratory.\n *\n * virtual_botanical_laboratory is free software: you can redistribute it\n * and/or modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * virtual_botanical_laboratory is distributed in the hope that it will be\n * useful, but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General\n * Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with virtual_botanical_laboratory.  If not, see\n * <http://www.gnu.org/licenses/>.\n * \n */\nconst _formalParameters = new WeakMap();\nconst _expression = new WeakMap();\nconst _evaluator = new WeakMap();\n\n/**\n * An Expression can be evaluated to yield a value.\n *\n * @property {String} expression - a textual representation of this expression\n */\nclass Expression {\n\n    /**\n     * Create a new instance of an Expression.\n     *\n     * @param {String[]} [formalParameters = []] - an optional list of formal\n     * parameter names.\n     * @param {Boolean|Number|undefined} [expression = undefined] - an optional expression\n     * value, defaults to undefined.\n     */\n    constructor(formalParameters = [], expression = undefined) {\n        _formalParameters.set(this, formalParameters);\n        _expression.set(this, expression);\n        _evaluator.set(this, new Function(...formalParameters, `return ${expression}`));\n    }\n\n    /**\n     * Evaluate this Expression given an optional list of actual parameters.\n     *\n     * @param {Number[]|Boolean[]} [actualParameters = []] - an optional list\n     * of actual parameters to apply to this Expression before evaluating the\n     * Expression.\n     *\n     * @return {Number|Boolean|undefined} the result of the evaluating this\n     * Expression.\n     */\n    evaluate(actualParameters = []) {\n        return _evaluator.get(this).apply(undefined, actualParameters);\n    }\n\n    get expression() {\n        return _expression.get(this);\n    }\n\n    /**\n     * Create a String representation of this Expression.\n     *\n     * @returns {String}\n     */\n    stringify() {\n        return this.expression;\n    }\n}\n\nexport {\n    Expression\n}\n","/*\n * Copyright 2017 Huub de Beer <huub@heerdebeer.org>\n *\n * This file is part of virtual_botanical_laboratory.\n *\n * virtual_botanical_laboratory is free software: you can redistribute it\n * and/or modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * virtual_botanical_laboratory is distributed in the hope that it will be\n * useful, but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General\n * Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with virtual_botanical_laboratory.  If not, see\n * <http://www.gnu.org/licenses/>.\n * \n */\nimport {Expression} from \"./Expression.js\";\n\n/**\n * A BooleanExpression\n */\nclass BooleanExpression extends Expression {\n    /**\n     * Create a new instance of a BooleanExpression.\n     *\n     * @param {String[]} [formalParameters = []] - an optional list of formal\n     * parameter names.\n     * @param {Boolean} [expression = true] - an optional default value for\n     * this BooleanExpression.\n     */\n    constructor(formalParameters = [], expression = true) {\n        super(formalParameters, expression);\n    }\n\n    /**\n     * Create a String representation of this BooleanExpression.\n     *\n     * @returns {String}\n     */\n    stringify() {\n        return super\n            .stringify()\n            .replace(/&&/g, \" and \")\n            .replace(/\\|\\|/g, \" or \")\n            .replace(/!/g, \" not \");\n    }\n}\n\nexport {\n    BooleanExpression\n}\n","/*\n * Copyright 2017 Huub de Beer <huub@heerdebeer.org>\n *\n * This file is part of virtual_botanical_laboratory.\n *\n * virtual_botanical_laboratory is free software: you can redistribute it\n * and/or modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * virtual_botanical_laboratory is distributed in the hope that it will be\n * useful, but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General\n * Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with virtual_botanical_laboratory.  If not, see\n * <http://www.gnu.org/licenses/>.\n * \n */\nimport {Expression} from \"./Expression.js\";\n\n/**\n * A NumericalExpression, which yields a Number value when evaluated\n */\nclass NumericalExpression extends Expression {\n    /**\n     * Create a new NumericalExpression instance.\n     *\n     * @param {String[]} [formalParameter = []] - an optional list of formal\n     * parameter names used in this NumericalExpression.\n     * @param {Number} [expression = NaN] - an optional default value.\n     */\n    constructor(formalParameters = [], expression = NaN) {\n        super(formalParameters, expression);\n    }\n\n    /**\n     * Create a String representation of this NumericalExpression.\n     *\n     * @returns {String}\n     */\n    stringify() {\n        return super\n            .stringify()\n            .replace(/\\*\\*/g, \" ^ \");\n    }\n\n}\n\nexport {\n    NumericalExpression\n}\n","/*\n * Copyright 2017 Huub de Beer <huub@heerdebeer.org>\n *\n * This file is part of virtual_botanical_laboratory.\n *\n * virtual_botanical_laboratory is free software: you can redistribute it\n * and/or modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * virtual_botanical_laboratory is distributed in the hope that it will be\n * useful, but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General\n * Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with virtual_botanical_laboratory.  If not, see\n * <http://www.gnu.org/licenses/>.\n * \n */\nimport {\n    Lexer,\n    NUMBER,\n    IDENTIFIER,\n    BRACKET_OPEN,\n    BRACKET_CLOSE,\n    OPERATOR,\n    DELIMITER,\n    KEYWORD\n} from \"./Lexer.js\";\nimport {ParseError} from \"./ParseError.js\";\nimport {LSystem} from \"./LSystem.js\";\nimport {Module} from \"./Module.js\";\nimport {ModuleDefinition} from \"./ModuleDefinition.js\";\n\nimport {Alphabet} from \"./Alphabet.js\";\n\nimport {Successor} from \"./Successor.js\";\nimport {Predecessor} from \"./Predecessor.js\";\nimport {Production} from \"./Production.js\";\nimport {StochasticProduction} from \"./StochasticProduction.js\";\n\nimport {BooleanExpression} from \"./BooleanExpression.js\";\nimport {NumericalExpression} from \"./NumericalExpression.js\";\n\nconst _lexer = new WeakMap();\nconst _idTable = new WeakMap();\n\n// Scopes\nconst MODULE = Symbol(\"MODULE\");\nconst PARAMETER = Symbol(\"PARAMETER\");\n\n// Contexts\nconst CONTEXT = Symbol(\"CONTEXT\");\nconst BOOL_EXPR = Symbol(\"BOOL_EXPR\");\nconst ACTUAL_PARAMETERS = Symbol(\"ACTUAL_PARAMETERS\");\nconst MODULE_NAME = Symbol(\"MODULE_NAME\");\n\nconst installIdentifier = function (parser, identifierToken, scope = MODULE) {\n    const idTable = _idTable.get(parser);\n    const name = identifierToken.value;\n    if (!defined(parser, name, scope)) {\n        idTable.push({name, scope});\n    } else {\n        throw new ParseError(`'name' at ${identifierToken.position()} is already defined.`);\n    }\n};\n\nconst defined = function (parser, name, scope = MODULE) {\n    const idTable = _idTable.get(parser);\n    return idTable.find((id) => id.name === name && id.scope === scope);\n};\n\nconst lookAhead = function (parser, name, value = undefined, distance = 1, context = undefined) {\n    const token = _lexer.get(parser).lookAhead(distance, context);\n    return token.name === name && (undefined !== value ? token.value === value : true);\n};\n\nconst match = function (parser, name, value = undefined, context = undefined) {\n    const token = _lexer.get(parser).getNextToken(context);\n    if (token.name === name && (undefined !== value ? token.value === value : true)) {\n        return token;\n    } else {\n        throw new ParseError(`expected ${name.toString()}${undefined !== value ? \" with value '\" + value + \"'\": ''} at ${token.position()}`);\n    }\n}\n\nconst parseList = function (parser, recognizeFunction, closingBracket = \")\") {\n    if (lookAhead(parser, BRACKET_CLOSE, closingBracket)) {\n        return [];\n    } else {\n        const item = recognizeFunction.call(undefined, parser);\n        const list = [item];\n        if (lookAhead(parser, DELIMITER, \",\")) {\n            match(parser, DELIMITER, \",\");\n            return list.concat(parseList(parser, recognizeFunction));\n        } else {\n            return list;\n        }\n    }\n};\n\nconst parseFormalParameter = function (parser) {\n    return match(parser, IDENTIFIER).value;\n};\n\nconst parseModuleDefinition = function (parser) {\n    const moduleNameToken = match(parser, IDENTIFIER, undefined, MODULE_NAME);\n    const moduleName = moduleNameToken.value;\n    installIdentifier(parser, moduleNameToken, MODULE);\n\n    let formalParameters = [];\n\n    if (lookAhead(parser, BRACKET_OPEN, \"(\")) {\n        match(parser, BRACKET_OPEN, \"(\");\n        if (lookAhead(parser, IDENTIFIER)) {\n            formalParameters = parseList(parser, parseFormalParameter);\n        }\n        match(parser, BRACKET_CLOSE, \")\");\n    }\n\n    return new ModuleDefinition(moduleName, formalParameters);\n};\n\nconst parseAlphabet = function (parser) {\n    match(parser, KEYWORD, \"alphabet\");\n    match(parser, DELIMITER, \":\");\n    match(parser, BRACKET_OPEN, \"{\");\n    const alphabet = new Alphabet(parseList(parser, parseModuleDefinition, \"}\"));\n    match(parser, BRACKET_CLOSE, \"}\");\n    return alphabet;\n};\n\nconst parseNumExprUnit = function (parser) {\n    let numExpr = \"\";\n    let variables = [];\n    if (lookAhead(parser, IDENTIFIER)) {\n        const variable = match(parser, IDENTIFIER).value;\n        numExpr = variable;\n        variables = [variable];\n    } else if (lookAhead(parser, NUMBER)) {\n        numExpr = match(parser, NUMBER).value.toString();\n    } else if (lookAhead(parser, OPERATOR, \"-\")) {\n        match(parser, OPERATOR, \"-\");\n        const [expr, vars] = parseNumExprUnit(parser);\n        numExpr = `- ${expr}`;\n        variables = variables.concat(vars);\n    } else if (lookAhead(parser, BRACKET_OPEN, \"(\")) {\n        match(parser, BRACKET_OPEN, \"(\");\n        const [expr, vars] = parseNumExpr(parser);\n        numExpr = `(${expr})`;\n        variables = variables.concat(vars);\n    }\n    return [numExpr, variables];\n};\n\nconst parseNumFactor = function (parser) {\n    let [expr, vars] = parseNumExprUnit(parser);\n    if (lookAhead(parser, OPERATOR, \"^\")) {\n        match(parser, OPERATOR);\n        const [subExpr, subVars] = parseNumFactor(parser);\n        expr += ` ** ${subExpr}`;\n        vars = vars.concat(subVars);\n    }\n    return [expr, vars];\n};\n\nconst parseNumTerm = function (parser) {\n    let [expr, vars] = parseNumFactor(parser);\n    if (\n        lookAhead(parser, OPERATOR, \"*\") ||\n        lookAhead(parser, OPERATOR, \"/\")\n    ) {\n        const op = match(parser, OPERATOR).value;\n        const [subExpr, subVars] = parseNumFactor(parser);\n        expr += ` ${op} ${subExpr}`;\n        vars = vars.concat(subVars);\n    }\n\n    return [expr, vars];\n};\n\nconst parseNumExpr = function (parser) {\n    let [expr, vars] = parseNumTerm(parser);\n    if (\n        lookAhead(parser, OPERATOR, \"+\") ||\n        lookAhead(parser, OPERATOR, \"-\")\n    ) {\n        const op = match(parser, OPERATOR).value;\n        const [subExpr, subVars] = parseNumTerm(parser);\n        expr += ` ${op} ${subExpr}`;\n        vars = vars.concat(subVars);\n    }\n\n    return [expr, vars];\n};\n\nconst parseCompExpr = function (parser) {\n    const [leftExpr, leftVars] = parseNumExpr(parser);\n    const op = match(parser, OPERATOR).value;\n    const [rightExpr, rightVars] = parseNumExpr(parser);\n    return [\n        `${leftExpr} ${op} ${rightExpr}`,\n        leftVars.concat(rightVars)\n    ];\n};\n\nconst parseBoolExprUnit = function (parser) {\n    let boolExpr = \"\";\n    let variables = [];\n\n    if (\n        lookAhead(parser, KEYWORD, \"true\") ||\n        lookAhead(parser, KEYWORD, \"false\")\n    ) {\n        boolExpr = match(parser, KEYWORD).value;\n    } else if (lookAhead(parser, KEYWORD, \"not\")) {\n        match(parser, KEYWORD);\n        const [expr, vars] = parseBoolExpr(parser);\n        boolExpr = `!${expr}`;\n        variables = variables.concat(vars);\n    } else if (lookAhead(parser, BRACKET_OPEN, \"(\")) {\n        match(parser, BRACKET_OPEN, \"(\");\n        const [expr, vars] = parseBoolExpr(parser);\n        boolExpr = `(${expr})`;\n        variables = variables.concat(vars);\n        match(parser, BRACKET_CLOSE, \")\");\n    } else {\n        const [expr, vars]  = parseCompExpr(parser);\n        boolExpr = expr;\n        variables = variables.concat(vars);\n    }\n     \n    return [boolExpr, variables];   \n};\n\nconst parseBoolFactor = function (parser) {\n    return parseBoolExprUnit(parser);\n};\n\nconst parseBoolTerm = function (parser) {\n    let [expr, vars] = parseBoolFactor(parser);\n    if (lookAhead(parser, KEYWORD, \"and\")) {\n        match(parser, KEYWORD);\n        const [subExpr, subVars] = parseBoolFactor(parser);\n        expr += ` && ${subExpr}`;\n        vars = vars.concat(subVars);\n    }\n    return [expr, vars];\n};\n\nconst parseBoolExpr = function (parser) {\n    let [expr, vars] = parseBoolTerm(parser);\n    if (lookAhead(parser, KEYWORD, \"or\")) {\n        match(parser, KEYWORD);\n        const [subExpr, subVars] = parseBoolTerm(parser);\n        expr += ` || ${subExpr}`;\n        vars = vars.concat(subVars);\n    }\n    return [expr, vars];\n};\n\nconst parseActualParameter = function (parser) {\n    const [expr, vars] = parseNumExpr(parser);\n    return new NumericalExpression(vars, expr);\n};\n\nconst parseActualModule = function (parser) {\n    const moduleNameToken = match(parser, IDENTIFIER, undefined, MODULE_NAME);\n    const moduleName = moduleNameToken.value;\n\n    if (!defined(parser, moduleName, MODULE)) {\n        throw new ParseError(`Module '${moduleName}' at position ${moduleToken.position()} not in the alphabet.`);\n    }\n\n    let actualParameters = [];\n   \n    if (lookAhead(parser, BRACKET_OPEN, \"(\")) {\n        match(parser, BRACKET_OPEN, \"(\");\n        actualParameters = parseList(parser, parseActualParameter);\n        match(parser, BRACKET_CLOSE, \")\");\n\n        // TODO: check match formal module\n    }\n\n    return new Module(moduleName, actualParameters);\n};\n\nconst parseSuccessor = function (parser) {\n    const successor = new Successor();\n\n    while (\n        lookAhead(parser, IDENTIFIER, undefined, 1, MODULE_NAME) || \n        lookAhead(parser, BRACKET_OPEN, \"[\")\n    ) {\n        if (lookAhead(parser, BRACKET_OPEN, \"[\")) {\n            // Match a sub tree\n            match(parser, BRACKET_OPEN, \"[\");\n            successor.push(parseSuccessor(parser));\n            match(parser, BRACKET_CLOSE, \"]\");\n        } else {\n            // Match a module in the successor\n            successor.push(parseActualModule(parser));\n        }\n    }\n\n    return successor;\n};\n\nconst parseAxiom = function (parser) {\n    match(parser, KEYWORD, \"axiom\");\n    match(parser, DELIMITER, \":\");\n    const axiom = parseSuccessor(parser);\n    return axiom;\n};\n\n\nconst parseStochasticSuccessorList = function (parser) {\n    const stochasticSuccessorList = [];\n    match(parser, BRACKET_OPEN, \"{\");\n    while (lookAhead(parser, NUMBER)) {\n        const probability = match(parser, NUMBER).value;\n        match(parser, OPERATOR, \"->\");\n        const successor = parseSuccessor(parser);\n        stochasticSuccessorList.push({probability, successor});\n        if (lookAhead(parser, DELIMITER, \",\")) {\n            match(parser, DELIMITER, \",\");\n        }\n    }\n    match(parser, BRACKET_CLOSE, \"}\");\n\n    // The propabilities should add up to 1.0 exactly.\n    const totalProbability = stochasticSuccessorList.reduce((sum, ps) => {\n        return sum + ps.probability;\n    }, 0);\n\n    if (totalProbability !== 1) {\n        throw new ParseError(`The probabilities of one module should add up to 1 exact, it adds up to ${totalProbability} instead.`);\n    }\n\n    return stochasticSuccessorList;\n};\n\nconst parsePredecessor = function (parser) {\n    const modules = []\n    let hasLeftContext = false;\n    let hasRightContext = false;\n   \n    modules.push(parseActualModule(parser));\n    \n    if (lookAhead(parser, BRACKET_OPEN, \"<\", 1, CONTEXT)) {\n        match(parser, BRACKET_OPEN, \"<\", CONTEXT);\n        modules.push(parseActualModule(parser));\n        hasLeftContext = true;\n    }\n    \n    if (lookAhead(parser, BRACKET_CLOSE, \">\", 1, CONTEXT)) {\n        match(parser, BRACKET_CLOSE, \">\", CONTEXT);\n        modules.push(parseActualModule(parser));\n        hasRightContext = true;\n    }\n\n    let predecessor = undefined;\n\n    if (1 === modules.length) {\n        predecessor = new Predecessor(modules[0]);\n    } else if (2 === modules.length) {\n        if (hasLeftContext) {\n            predecessor = new Predecessor(modules[1]);\n            predecessor.leftContext = modules[0];\n        } else {\n            predecessor = new Predecessor(modules[0]);\n            predecessor.rightContext = modules[1];\n        }\n    } else {\n        predecessor = new Predecessor(modules[1]);\n        predecessor.leftContext = modules[0];\n        predecessor.rightContext = modules[2];\n    }\n\n    return predecessor;\n};\n\nconst parseProduction = function (parser) {\n    let production = undefined;\n    const predecessor = parsePredecessor(parser);\n    let successor = undefined;\n    let condition = undefined;\n    \n    if (lookAhead(parser, DELIMITER, \":\")) {\n        match(parser, DELIMITER, \":\");\n        if (!lookAhead(parser, BRACKET_OPEN, \"{\")) {\n            const [expr, vars] = parseBoolExpr(parser);\n            condition = new BooleanExpression(vars, expr);\n        }\n    }\n    \n    if (lookAhead(parser, BRACKET_OPEN, \"{\")) {\n        successor = parseStochasticSuccessorList(parser);\n        production = new StochasticProduction(predecessor, successor, condition);\n    } else if (lookAhead(parser, OPERATOR, \"->\")) {\n        match(parser, OPERATOR, \"->\");\n        successor = parseSuccessor(parser);\n        production = new Production(predecessor, successor, condition);\n    }\n\n    return production;\n};\n\nconst parseProductions = function (parser) {\n    match(parser, KEYWORD, \"productions\");\n    match(parser, DELIMITER, \":\");\n    match(parser, BRACKET_OPEN, \"{\");\n    const productions = parseList(parser, parseProduction, \"}\");\n    match(parser, BRACKET_CLOSE, \"}\");\n    return productions;\n};\n\nconst parseLSystem = function (parser) {\n    match(parser, KEYWORD, \"lsystem\");\n    match(parser, BRACKET_OPEN, \"(\");\n    const alphabet = parseAlphabet(parser);\n    match(parser, DELIMITER, \",\");\n    const axiom = parseAxiom(parser);\n    match(parser, DELIMITER, \",\");\n    const productions = parseProductions(parser);\n    match(parser, BRACKET_CLOSE, \")\");\n    const lsystem = new LSystem(alphabet, axiom, productions);\n    return lsystem;\n}\n\n/**\n * Parser for LSystem input strings\n */\nclass Parser {\n\n    /**\n     * Create a new Parser\n     */\n    constructor() {\n    }\n\n    /**\n     * Parse a LSYSTEM definition input string\n     *\n     * @param {String} input - the input string to parse\n     *\n     * @returns {LSystem}\n     */\n    parse(input) {\n        _lexer.set(this, new Lexer(input));\n        _idTable.set(this, []);\n        return parseLSystem(this);\n    }\n};\n\nexport {\n    Parser,\n    CONTEXT,\n    MODULE_NAME\n};\n","/*\n * Copyright 2017 Huub de Beer <huub@heerdebeer.org>\n *\n * This file is part of virtual_botanical_laboratory.\n *\n * virtual_botanical_laboratory is free software: you can redistribute it\n * and/or modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * virtual_botanical_laboratory is distributed in the hope that it will be\n * useful, but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General\n * Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with virtual_botanical_laboratory.  If not, see\n * <http://www.gnu.org/licenses/>.\n * \n */\nimport {ModuleTree} from \"./ModuleTree.js\";\nimport {Successor} from \"./Successor.js\";\nimport {IdentityProduction} from \"./IdentityProduction.js\";\nimport {Parser} from \"./Parser.js\";\n\nconst _alphabet = new WeakMap();\nconst _axiom = new WeakMap();\nconst _productions = new WeakMap();\nconst _currentDerivation = new WeakMap();\n\n\nconst findProduction = function (lsystem, module) {\n    const candidates = lsystem\n        .productions\n        .filter((p) => p.predecessor.matches(module));\n\n    if (0 < candidates.length) {\n        return candidates[0];\n    } else {\n        // Modules that do not match any production are copied to the\n        // successor directly. This is also known as the 'identity' production\n        // rule.\n        return new IdentityProduction(module);\n    }\n};\n\nconst derive = function(lsystem, moduleTree) {\n    const successor = new Successor();\n\n    for (const node of moduleTree) {\n        if (node instanceof ModuleTree) {\n            successor.push(derive(lsystem, node));\n        } else {\n            const production = findProduction(lsystem, node);\n            const rewrittenNode = production.follow();\n\n            for (const successorNode of rewrittenNode) {\n                successor.push(successorNode);\n            }\n        }\n    }\n\n    return successor;\n};\n\n/**\n * An LSystem model\n *\n * @property {Alphabet} alphabet - the set of modules of this LSystem\n * @property {ModuleTree} axiom - the axion of this LSystem\n * @property {Production[]} productions - the set of productions of this\n * LSystem\n */\nconst LSystem = class {\n    /**\n     * Create a new instance of LSystem.\n     *\n     * @param {Alphabet} alphabet\n     * @param {ModuleTree} axiom\n     * @param {Production[]} productions\n     */\n    constructor(alphabet, axiom, productions) {\n        _alphabet.set(this, alphabet);\n        _axiom.set(this, axiom);\n        _productions.set(this, productions);\n        _currentDerivation.set(this, axiom);\n    }\n\n    /**\n     * Parse an LSystem input string and return the represented LSystem.\n     *\n     * @param {String} input\n     * @returns {LSystem} the parsed LSystem\n     * @throws {ParseError|LexicalError} if something goes wrong during\n     * parsing, an error is thrown.\n     */\n    static parse(input) {\n        return (new Parser()).parse(input);\n    }\n\n    get alphabet() {\n        return _alphabet.get(this);\n    }\n\n    get axiom() {\n        return _axiom.get(this);\n    }\n\n    get productions() {\n        return _productions.get(this);\n    }\n\n    /**\n     * Create a String representation of this LSystem. This representation can\n     * be parsed again to an LSystem equal to this one.\n     *\n     * @return {String}\n     */\n    stringify() {\n        return `lsystem(alphabet: {${this.alphabet.stringify()}}, axiom: ${this.axiom.stringify()}, productions: {${this.productions.map((p) => p.stringify()).join(\", \")}})`;\n    }\n\n    /**\n     * Taking the current state of this LSystem as the predecessor, derive a\n     * successor.\n     *\n     * @param {Number} [steps = 1] - the number of derivations to perform,\n     * defaults to one step.\n     *\n     * @returns {Successor} the successor.\n     */\n    derive(steps = 1) {\n        for (let i = 0; i < steps; i++) {\n            // do a derivation\n            _currentDerivation.set(this, derive(this, _currentDerivation.get(this)));\n        }\n        return _currentDerivation.get(this);\n    }\n};\n\nexport {\n    LSystem\n};\n","/*\n * Copyright 2017 Huub de Beer <huub@heerdebeer.org>\n *\n * This file is part of virtual_botanical_laboratory.\n *\n * virtual_botanical_laboratory is free software: you can redistribute it\n * and/or modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * virtual_botanical_laboratory is distributed in the hope that it will be\n * useful, but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General\n * Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with virtual_botanical_laboratory.  If not, see\n * <http://www.gnu.org/licenses/>.\n * \n */\n\nconst _function = new WeakMap();\n\nclass Command {\n    constructor(...args) {\n        let func;\n\n        if (0 >= args.length) {\n            // create an empty function; does do nothing\n            func = function () {};\n        } else if (1 === args.length) {\n            // create with a function or a constant\n            if (\"function\" === typeof args[0]) {\n                func = args[0];\n            } else {\n                func = function () { return args[0]; };\n            }\n        } else if (2 === args.length) {\n            // create with formal parameters and a function body in a string\n            func = new Function(args[0], args[1]);\n        } else {\n            // ?\n            throw new Error(`Expected at most 2 arguments, got ${args.length} instead.`);\n        }\n\n        _function.set(this, func);\n    }\n\n    /**\n     * Execute this Command in this interpretation given the supplier\n     * parameters\n     *\n     * @param {Interpretation} interpretation - the interpretation in which this command is executed\n     * @param {Array} [parameters = []] - the parameters used in this Commmand\n     */\n    execute(interpretation, parameters = []) {\n        _function.get(this).apply(interpretation, parameters);\n    }\n}\n\nexport {\n    Command\n}\n","/*\n * Copyright 2017 Huub de Beer <huub@heerdebeer.org>\n *\n * This file is part of virtual_botanical_laboratory.\n *\n * virtual_botanical_laboratory is free software: you can redistribute it\n * and/or modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * virtual_botanical_laboratory is distributed in the hope that it will be\n * useful, but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General\n * Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with virtual_botanical_laboratory.  If not, see\n * <http://www.gnu.org/licenses/>.\n * \n */\nimport {Command} from \"./Command.js\";\n\nconst _commands = new WeakMap();\nconst _initialState = new WeakMap();\nconst _states = new WeakMap();\n\nconst renderTree = function (interpretation, moduleTree) {\n    for (const item of moduleTree) {\n        if (Array.isArray(item)) {\n            interpretation.enter();\n            renderTree(interpretation, item);\n            interpretation.exit();\n        } else {\n            interpretation.execute(item.name, item.parameters);\n        }\n    }\n};\n\n/**\n * An Interpretation of a LSystem\n *\n * @property {Object} state - the current state of this Interpretation.\n */\nclass Interpretation {\n    /**\n     * Create a new instance of an LSystem Interpretation.\n     * \n     * @param {RenderingContext|SVGElement} canvas - the canvas to draw on.\n     * @param {Object} scope - the scope of this Interpretation.\n     */\n    constructor(initialState = {}) {\n        _initialState.set(this, initialState);\n        _states.set(this, []);\n        _commands.set(this, {});\n    }\n\n    get state() {\n        const states = _states.get(this);\n        if (0 === states.length) {\n            this.initialize();\n        }\n\n        return states[states.length - 1];\n    }\n\n    /**\n     * A command function has the following signature:\n     *\n     * @callback commandFunction\n     * @param {Number[]} [parameters = []] - a list of numerical parameters\n     * you can use in the command;\n     */\n\n    /**\n     * Execute a command with given parameters in the context of this\n     * Interpretation.\n     *\n     * @param {String} name - the name of the command to execute.\n     * @param {Array} [parameters = []] - an optional list of actual\n     * parameters to apply when the command is executed.\n     */\n    execute(name, parameters = []) {\n        const command = _commands.get(this)[name];\n\n        if (undefined === command) {\n            throw new Error(`This interpretation has no command '${name}' to execute.`);\n        }\n\n        if (\"string\" === typeof command) {\n            this.execute(command, parameters);\n        } else if (command instanceof Command) {\n            command.execute(this, parameters);\n        } else {\n            throw new Error(`'${name}' is not an executable command in this interpretation.`);\n        }\n    }\n\n    /**\n     * Set a property of this Interpretation.\n     *\n     * @param {String} name - the name of the property.\n     * @param {Object} value - the new value of the property.\n     */\n    setProperty(name, value) {\n        this.state[name] = value;\n    }\n\n    /**\n     * Get a property of this Interpretation. If no such property exists, or\n     * if its value is undefined or null, return the defaultValue.\n     *\n     * @param {String} name - the name of the property.\n     * @param {defaultValue} [defaultValue = 0] - the default value of this\n     * property if no such property exists or its value is undefined or null.\n     *\n     * @returns {Object} the value of the property.\n     */\n    getProperty(name, defaultValue = 0) {\n        const value = this.state[name]\n        return (undefined === value || null === value) ? defaultValue : value;\n    }\n\n\n    /**\n     * Set a command in this Interpretation.\n     *\n     * @param {String} name - the name of the command to set.\n     * @param {Command} command - the command.\n     */\n    setCommand(name, command) {\n        _commands.get(this)[name] = command;\n    }\n\n    /**\n     * Alias a command.\n     *\n     * @param {String|String[]} aliasNames - a list of aliases for command.\n     * @param {String} commandName - a command's name.\n     */\n    alias(aliasNames, commandName) {\n        if (!Array.isArray(aliasNames)) {\n            aliasNames = [aliasNames];\n        }\n\n        for(const alias of aliasNames) {\n            _commands.get(this)[alias] = commandName;\n        }\n    }\n\n    /**\n     * Get a command in this Interpretation.\n     *\n     * @param {String} name - the name of the command to get.\n     * @returns {Command|undefined}\n     */\n    getCommand(name) {\n        const command = _commands.get(this)[name];\n\n        if (command instanceof Command) {\n            return command;\n        } else if (\"string\" === typeof command) {\n            return getCommand(command);\n        } else {\n            return undefined;\n        };\n    }\n\n    /**\n     * Initialize a new rendering of this interpretation.\n     */\n    initialize() {\n        _states.set(this, [_initialState.get(this)]);\n    }\n\n    /**\n     * Render a moduleTree given this Interpretation.\n     *\n     * @param {ModuleTree} moduleTree - the moduleTree to render on the\n     * canvas.\n     */\n    render(moduleTree) {\n        this.initialize();\n        renderTree(this, moduleTree);\n        this.finalize();\n    }\n\n    /**\n     * Enter a sub tree.\n     */\n    enter() {\n        const currentState = Object.assign({}, this.state);\n        _states.get(this).push(currentState);\n    }\n\n    /**\n     * Exit a sub tree.\n     */\n    exit() {\n        _states.get(this).pop();\n    }\n\n    /**\n     * Finalize a rendering of this interpretation.\n     */\n    finalize() {\n    }\n}\n\nexport {\n    Interpretation\n}\n","/*\n * Copyright 2017 Huub de Beer <huub@heerdebeer.org>\n *\n * This file is part of virtual_botanical_laboratory.\n *\n * virtual_botanical_laboratory is free software: you can redistribute it\n * and/or modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * virtual_botanical_laboratory is distributed in the hope that it will be\n * useful, but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General\n * Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with virtual_botanical_laboratory.  If not, see\n * <http://www.gnu.org/licenses/>.\n * \n */\nimport {Interpretation} from \"./Interpretation.js\";\nimport {Command} from \"./Command.js\";\n\n// Default values\nconst X = 0;\nconst Y = 0;\nconst D = 2;\nconst DELTA = Math.PI / 2;\nconst ALPHA = 0;\n\nconst _x = new WeakMap();\nconst _y = new WeakMap();\nconst _d = new WeakMap();\nconst _delta = new WeakMap();\nconst _alpha = new WeakMap();\n\nclass TurtleInterpretation extends Interpretation {\n    constructor(initialState = {}) {\n        super(initialState);\n\n        this.setCommand(\"+\", new Command(function () {\n            this.alpha = this.alpha + this.delta;\n        }));\n\n        this.setCommand(\"-\", new Command(function () {\n            this.alpha = this.alpha - this.delta;\n        }));\n\n        this.setCommand(\"f\", new Command(function () {\n            this.x = this.x + this.d * Math.cos(this.alpha);\n            this.y = this.y + this.d * Math.sin(this.alpha);\n\n            this.moveTo(this.x, this.y);\n        }));\n        \n        this.setCommand(\"F\", new Command(function () {\n            this.x = this.x + this.d * Math.cos(this.alpha);\n            this.y = this.y + this.d * Math.sin(this.alpha);\n\n            this.lineTo(this.x, this.y);\n        }));\n\n\n        this.alias([\"Fl\", \"Fr\"], \"F\");\n    }\n\n    moveTo(x, y) {\n        // to be implemented by a sub class \n    }\n\n    lineTo(x, y) {\n        // to be implemented by a sub class \n    }\n\n    get x() {\n        return this.getProperty(\"x\", X);\n    }\n\n    set x(value = 0) {\n        this.setProperty(\"x\", value);\n    }\n\n    get y() {\n        return this.getProperty(\"y\", Y);\n    }\n\n    set y(value = 0) {\n        this.setProperty(\"y\", value);\n    }\n\n    get d() {\n        return this.getProperty(\"d\", D);\n    }\n\n    set d(value = 1) {\n        this.setProperty(\"d\", value);\n    }\n\n    get alpha() {\n        return this.getProperty(\"alpha\", ALPHA);\n    }\n\n    set alpha(value = 0) {\n        this.setProperty(\"alpha\", value);\n    }\n\n    get delta() {\n        return this.getProperty(\"delta\", DELTA);\n    }\n\n    set delta(value = 1) {\n        this.setProperty(\"delta\", value);\n    }\n\n}\n\nexport {\n    TurtleInterpretation\n}\n","/*\n * Copyright 2017 Huub de Beer <huub@heerdebeer.org>\n *\n * This file is part of virtual_botanical_laboratory.\n *\n * virtual_botanical_laboratory is free software: you can redistribute it\n * and/or modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * virtual_botanical_laboratory is distributed in the hope that it will be\n * useful, but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General\n * Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with virtual_botanical_laboratory.  If not, see\n * <http://www.gnu.org/licenses/>.\n * \n */\nimport {TurtleInterpretation} from \"./TurtleInterpretation.js\";\n\nconst _canvas = new WeakMap();\n\nclass CanvasTurtleInterpretation extends TurtleInterpretation {\n    constructor(canvas, initialState = {}) {\n        super(initialState);\n        _canvas.set(this, canvas);\n    }\n\n    initialize() {\n        super.initialize();\n        const canvas = _canvas.get(this);\n        canvas.clearRect(0, 0, canvas.canvas.width, canvas.canvas.height);\n        canvas.beginPath();\n        canvas.moveTo(this.x, this.y);\n    }\n\n    finalize() {\n        super.finalize();\n        const canvas = _canvas.get(this);\n        if (this.getProperty(\"close\", true)) {\n            canvas.closePath();\n        }\n        canvas.stroke();\n    }\n\n    moveTo(x, y) {\n        _canvas.get(this).moveTo(x, y);\n    }\n\n    lineTo(x, y) {\n        _canvas.get(this).lineTo(x, y);\n    }\n\n    enter() {\n        const canvas = _canvas.get(this);\n        canvas.stroke();\n        canvas.save();\n        super.enter();\n        canvas.beginPath();\n        canvas.moveTo(this.x, this.y);\n    }\n\n    exit() {\n        const canvas = _canvas.get(this);\n        canvas.stroke();\n        canvas.closePath();\n        canvas.restore();\n        super.exit();\n    }\n        \n}\n\nexport {\n    CanvasTurtleInterpretation\n}\n","/*\n * Copyright 2017 Huub de Beer <huub@heerdebeer.org>\n *\n * This file is part of virtual_botanical_laboratory.\n *\n * virtual_botanical_laboratory is free software: you can redistribute it\n * and/or modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * virtual_botanical_laboratory is distributed in the hope that it will be\n * useful, but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General\n * Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with virtual_botanical_laboratory.  If not, see\n * <http://www.gnu.org/licenses/>.\n * \n */\n\nimport {LSystem} from \"./lsystem/LSystem.js\";\nimport {Interpretation} from \"./interpretation/Interpretation.js\";\nimport {CanvasTurtleInterpretation} from \"./interpretation/CanvasTurtleInterpretation.js\";\n\nconst SIZE = 400;\n\nconst _element = new WeakMap();\nconst _lsystem = new WeakMap();\nconst _interpretation = new WeakMap();\nconst _description = new WeakMap();\n\nconst createInterpretation = function (lab, interpretation = {}) {\n    if (!(interpretation instanceof Interpretation)) {\n        if (\"canvas\" === interpretation.type) {\n            const element = document.createElement(\"canvas\");\n            element.width = SIZE;\n            element.height = SIZE;\n            \n            _element.set(lab, element);\n            \n            interpretation = new CanvasTurtleInterpretation(element.getContext(\"2d\"), interpretation.config);\n        } else {\n            // not implemented yet\n            throw new Error(\"Only the canvas format has been implemented yet.\");\n        }\n    }\n\n    _interpretation.set(lab, interpretation);\n};\n\nconst createLSystem = function (lab, lsystem = \"\") {\n    if (!(lsystem instanceof LSystem)) {\n        // Interpret lsystem as a string to parse into an LSystem. Will\n        // throw a parse error if it does not succeed\n        lsystem = LSystem.parse(lsystem);\n    }\n\n    _lsystem.set(lab, lsystem);\n};\n\nconst initializeAndRun = function (lab, steps = 0) {\n    if (!Number.isInteger(steps) || 0 > steps) {\n        steps = 0;\n    }\n    lab.run(steps);\n};\n\n/**\n * Lab is the public API to interact with an lsystem and its interpretation.\n * Use this class to build an application on top of.\n *\n * Each Lab has a valid LSystem and a corresponding Interpretation. \n */\nclass Lab {\n    constructor(config = {}) {\n        createInterpretation(this, config.interpretation);\n        createLSystem(this, config.lsystem);\n        initializeAndRun(this, config.steps);\n    }\n\n    get element() {\n        return _element.get(this);\n    }\n\n    get interpretation() {\n        return _interpretation.get(this);\n    }\n\n    set interpretation(config = {}) {\n        createInterpretation(this, config);\n    }\n\n    set lsystem(lsystem) {\n        createLSystem(this, lsystem);\n    }\n\n    get lsystem() {\n        return _lsystem.get(this);\n    }\n\n    get description() {\n        return _description.get(this);\n    }\n\n    set description(description) {\n        _description.set(this, description);\n    }\n\n\n    // actions\n    // control rendering\n    run(steps = 0) {\n        this.interpretation.render(this.lsystem.derive(steps))\n    }\n\n    stop() {}\n    step() {}\n    pause() {}\n\n    reset() {\n            \n    }\n\n    // Properties\n    setProperty(name, value) {}\n    getProperty(name) {}\n    getAllProperties() {}\n\n    // Commands\n    setCommand(name, command) {}\n    getCommand(name) {}\n    getAllCommands() {}\n\n    // New/open/save\n    new() {}\n    open(file) {}\n    save(file) {}\n\n    //Export\n    toPNG() {}\n    toSVG() {}\n    toHTML() {}\n    \n    // Information\n    about() {\n        \n        return `The virtual botanical library is a free software project to\n        explore the ideas in the book Prusinkiewicz and Lindenmayer (1990) The\n        algorithmic beauty of plants. You can find the project at\n        https://github.com/htdebeer/virtual_botanical_laboratory.`;\n\n    }\n\n    help() {\n\n        return `There is no help at the moment; the project is still under\n        heavy development.`;\n\n    }\n}\n\nexport {\n    Lab\n}\n","/*\n * Copyright 2017 Huub de Beer <huub@heerdebeer.org>\n *\n * This file is part of virtual_botanical_laboratory.\n *\n * virtual_botanical_laboratory is free software: you can redistribute it\n * and/or modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * virtual_botanical_laboratory is distributed in the hope that it will be\n * useful, but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General\n * Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along\n * with virtual_botanical_laboratory.  If not, see\n * <http://www.gnu.org/licenses/>.\n * \n */\nimport {LexicalError} from \"./lsystem/LexicalError.js\";\nimport {ParseError} from \"./lsystem/ParseError.js\";\nimport {LSystem} from \"./lsystem/LSystem.js\";\nimport {Interpretation} from \"./interpretation/Interpretation.js\";\nimport {TurtleInterpretation} from \"./interpretation/TurtleInterpretation.js\";\nimport {CanvasTurtleInterpretation} from \"./interpretation/CanvasTurtleInterpretation.js\";\nimport {Lab} from \"./Lab.js\";\n\nexport {\n    LexicalError,\n    ParseError,\n    LSystem,\n    Interpretation,\n    TurtleInterpretation,\n    CanvasTurtleInterpretation,\n    Lab\n};\n"],"names":["_column","_line","_lexemeBegin","_name"],"mappings":"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"}